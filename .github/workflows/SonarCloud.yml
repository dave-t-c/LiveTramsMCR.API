name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET Core SDK 6.0
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '6.0'
      - name: Start docker containers
        run: docker compose up -d
      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Build coverage docker image
        run: docker build -t BuildCoverage -f BuildCoverage.Dockerfile . 
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"dave-t-c_TfGM-API-Wrapper" /o:"dave-t-c" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=./Output/coverage.xml
          dotnet build --no-incremental
          docker run --network=livetramsmcrapi_default --name coverage-builder -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -v $(pwd)/Output:/Output -d BuildCoverage
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      - name: Teardown docker containers
        run: docker compose down